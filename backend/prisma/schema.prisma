generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id               Int       @id @default(autoincrement())
  username         String?   @unique(map: "username") @db.VarChar(255)
  email            String?   @db.VarChar(255)
  password         String?   @db.VarChar(255)
  createdAt        DateTime? @default(now()) @db.DateTime(0)
  updatedAt        DateTime? @default(now()) @updatedAt @db.DateTime(0)
  openaiTokenUsage Int?      @default(0)
  notes            Note[]
  Tag              Tag[]
}

model Tag {
  id     Int       @id @default(autoincrement())
  userId Int?
  label  String?   @db.VarChar(255)
  color  String?   @db.VarChar(255)
  notes  NoteTag[]
  Users  Users?    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Tag_ibfk_1")

  @@index([userId], map: "userId")
}

model Note {
  id            Int       @id @default(autoincrement())
  userId        Int?
  title         String?   @db.VarChar(255)
  createdAt     DateTime? @default(now()) @db.DateTime(0)
  updatedAt     DateTime? @default(now()) @updatedAt @db.DateTime(0)
  deadlineAt    DateTime? @db.DateTime(0)
  duration      Int?
  reminderDelay Int?
  text          String?   @db.Text
  state         String?   @db.VarChar(255)
  importance    Int?
  user          Users?    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Note_ibfk_1")
  tags          NoteTag[]

  @@index([userId], map: "userId")
}

model NoteTag {
  noteId Int
  tagId  Int
  note   Note @relation(fields: [noteId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "NoteTag_ibfk_1")
  tag    Tag  @relation(fields: [tagId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "NoteTag_ibfk_2")

  @@id([noteId, tagId])
  @@index([tagId], map: "tagId")
}